// foreach

Дан массив с названиями методов массивов. Необходимо вывести в консоль сообщения "Метод ИМЯ_МЕТОДА" для каждого метода массива.
const methods = [
    'push()',
    'pop()',
    'shift()',
    'unshift()',
    'slice()',
    'splice()',
    'foreach()',
    'map()',
    'find()',
    'findIndex()',
];

// Вывод

// Метод push()
// Метод pop()
// Метод shift()
// Метод unshift()
// Метод slice()
// Метод splice()
// Метод foreach()
// Метод map()
// Метод find()
// Метод findIndex()



// find

Вам дан массив computers с объектами. Найдите в массиве объект "MacBook Pro 16" и выведите его в консоль.

const computers = [
    {
        name: 'MacBook Pro 13',
        price: 4000
    },
    {
        name: 'MacBook Pro 14',
        price: 5000
    },
    {
        name: 'MacBook Pro 16',
        price: 7000
    },
];

console.log(macbook)

// { name: 'MacBook Pro 16', price: 7000 }


// some

Дан массив чисел arrayNumbers. Необходимо создать переменную isMoreThenHundred, которая будет true или false в зависимости от того, если в нем хотя бы одно число строго больше 100


const arrayNumbers = [10, 15, 5, 100, 50, 101, 203, 800];

console.log(isMoreThenHundred) // => true




// sort

Дан массив чисел arrayNumbers. Необходимо отсортировать массив в порядке убывания

const arrayNumbers = [10, -2, -3, 0, 1, 30, 25];

console.log(arrayNumbers); // [30,25,10,1,0,-2,-3]


// filter

Дан массив имен names. Необходимо создать переменную filteredNames и отфильтровать массив так, чтобы в нем остались только те имена, длина окторых больше либо равна 5

const names = ['Александр', 'Ян', 'Оля ', 'Вячеслав', 'Маша', 'Анатолий'];


console.log(filteredNames) // => ['Александр','Вячеслав', 'Анатолий']


// reduce

Дан массив чисел arrayNumbers:
1) Создайте переменную sum, которая будет содержать сумму всех элементов массива
2) Создайте переменную average, которая будет содержать среднее арифметическое чисел из массива (результат округлить до целых)

const arrayNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];


console.log(sum); // => 45
console.log(average); // => 5



Представьте, что у вас есть друг Алексей, который является владельцем кофейни. Он хочет сделать сайт для этой кофейни, чтобы люди могли заказывать доставку кофе на дом. Самая главная функция, которую хочет видеть Алексей, это поиск кофе по названию.
Ваш друг просит вас помочь ему с разработкой сайта.
Изначально у вас есть массив coffees, в котором хранятся все виды кофе, которые есть в кофейне у Алексея. Напитки распределены в порядке популярности среди клиентов. Т.е. кофе “Latte” - самый популярный.

const coffees = ['Latte', 'Cappuccino', 'Americano'];

С помощью функции prompt вам необходимо запрашивать название кофе. Передайте в prompt сообщение “Поиск кофе по названию:”. Сохраните значение, которое ввел пользователь в переменную coffeeName.
Если введенное пользователем название кофе существует, то отобразите сообщение с помощью alert “Держите ваш любимый кофе coffee. Он number-й по популярности в нашей кофейне.”, где coffee - название найденного кофе, number - номер найденного кофе в массиве coffees. Если же кофе не был найден, то отобразите сообщение “К сожалению, такого вида кофе нет в наличии”.

Условия:
1. Название кофе должно быть регистронезависимым. Т.е. если пользователь напечатает “lATte”, то должен показаться результат с кофе “Latte”
2. Необходимо использовать findIndex.




Вы разработали главную функциональность, которую хотел видеть Алексей на своем сайте. Он говорит вам большое спасибо, потому что благодаря сайту в кофейне увеличилось количество продаж. Теперь Алексей захотел поднять цену на кофе, чтобы прибыли было еще больше.

У вас изначально есть 2 массива: coffees (хранит названия кофе) и prices (хранит цены на кофе). Индексы для названий кофе и цен взаимосвязаны. Т.е. “Latte” стоит 1.5 евро, “Cappuccino” - 1 евро, и т.д.

const coffees = ['Latte', 'Cappuccino', 'Americano'];
const prices = [1.5, 1, 2];

Вам необходимо создать новый массив updatedPrices, который будет содержать те же числа из массива prices, но только увеличенные на 0.5.
После подъема цен вам необходимо уведомить об этом клиентов кофейни, поэтому выведите для каждого типа кофе сообщение через alert “Кофе name сейчас стоит price евро”, где name - название кофе, а price - обновленная цена на кофе.

Условия:
1. Необходимо использовать методы массивов map и forEach




Последнее, что хочет видеть Алексей на своем сайте - это система оценок работы кофейни. Владельцу необходимо знать мнение клиентов, чтобы исправлять недочеты в своей работе.
Для начала вам необходимо создать пустой массив clientsEstimations, в котором будут хранится оценки клиентов кофейни. Также создайте функцию askClientToGiveEstimation, которая должна выводить сообщение “Как вы оцениваете нашу кофейню от 1 до 10?” через prompt. Конечный результат, который введет пользователь, должен быть типом данных number. Если было введено число от 1 до 10, то добавьте эту оценку в массив clientsEstimations, иначе же никаких действий не совершайте.

Для добавления оценок вызовите функцию askClientToGiveEstimation 5 раз.

Рекомендуется это сделать через цикл for.

После того, как оценки будут добавлены, вам необходимо посчитать положительные и отрицательных оценки. Положительной оценкой является число больше 5, отрицательной - число, меньшее за 5 либо равное 5. Выведите через alert сообщение “Всего положительных оценок: goodEstimations; Всего отрицательных оценок:
notGoodEstimations”, где goodEstimations - количество положительных оценок, а notGoodEstimations - количество отрицательных оценок.

Условия:
1. В решение должен быть использован метод массивов filter.




Вам дан массив чисел.
const numbers = [10, 4, 100, -5, 54, 2];
Необходимо посчитать сумму кубов всех чисел в массиве. Например, для массива [1, 5, 9]
должен быть следующий результат:
1^3 + 5^3 + 9^3 = 1 + 125 + 729 = 855

Решить через метод reduce и foreach

Для данного массива numbers сумма кубов должна равняться 1158411.




Вам дан массив, элементами которого являются массивы.
const matrix = [
[ 1, 2, 3 ],
[ 4, 5, 6 ],
[ 7, 8, 9 ],
];
Вам необходимо сделать из элементов вложенных массивов один массив. Итоговый результат должен выглядеть следующим образом: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ].

Условия:
1. Нельзя использовать метод массивов flat.
2. Необходимо, чтобы в решении использовался метод concat либо spread-оператор






// объекты


Вам необходимо создать функцию giveJobToStudent, которая будет добавлять новое
свойство в объект и выводить информацию в модальном окне. Она принимает в себя 2
параметра:
1. student - объект, содержащий информацию о студенте
2. jobName - название новой работы студента
Функция giveJobToStudent выводит в модальное окно сообщение “Поздравляем! У
студента fullName появилась новая работа! Теперь он jobName”, где fullName - это имя
студента, а jobName - название новой работы студента.
Функция giveJobToStudent должна возвращать новый объект студента, в котором будут
все ключи из объекта student и также появится новый ключ job со значением параметра
jobName.
Для теста функции giveJobToStudent используйте следующий код:
const student = {
fullName: 'Максим',
experienceInMonths: 12,
stack: ['HTML', 'CSS', 'JavaScript', 'React'],
}
const updatedStudent = giveJobToStudent(student, 'веб-разработчик');
/*
updatedStudent = {
fullName: 'Максим',
experienceInMonths: 12,
stack: ['HTML', 'CSS', 'JavaScript', 'React'],
job: 'веб-разработчик',
}
*/